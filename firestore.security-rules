service cloud.firestore {
  match /databases/{database}/documents {

   function isMember(){
      return request.auth.uid != null && exists(/databases/$(database)/documents/user_profiles/$(request.auth.uid));
   }
   match /gifts/{userId}/gifts/{gift=**} {
      allow read : if isMember();
      allow write: if isMember();
   }
   match /user_candidates/{userId} {
        // candidates can check for existence (first insert)
        allow list          : if request.auth.uid != null;
        // members can accept candidates
        allow get,delete    : if isMember();
        // candidates can only change their profile
        allow create,update : if request.auth.uid != null
                           && request.auth.uid == userId
                           && request.resource.data.keys().hasAll(['userId','email', 'displayName','lastRequestTime','lastRequestTimeReadable'])
                           && request.resource.data.size() == 5
                           && request.resource.data.userId is string
                           && request.resource.data.userId.size() < 100
                           && request.resource.data.email is string
                           && request.resource.data.email.size() < 256
                           && request.resource.data.displayName is string
                           && request.resource.data.displayName.size() < 1024
                           && request.resource.data.lastRequestTime is int
                           && request.resource.data.lastRequestTimeReadable is string
                           && request.resource.data.lastRequestTimeReadable.size() < 25
                    ;
      }
   match /user_profiles/{userId} {
        // members can
        //  - insert candidates
        //  - check if members exist
        allow create,read: if request.auth.uid == userId || isMember();
        // members only change their profiles
        allow write : if request.auth.uid != null
                           && request.auth.uid == userId
   }
  }
}
